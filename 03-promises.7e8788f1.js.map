{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SA0CA,SAASC,EAAcC,EAAUC,GAE/B,OADsBC,KAAKC,SAAW,GAE7BC,QAAQC,QAAQ,CAAEL,SAAUA,EAAUC,MAAOA,IAE7CG,QAAQE,OAAO,CAAEN,SAAUA,EAAUC,MAAOA,G,EA9C1C,CACXM,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAMC,iBACN,IAEuBC,EAAnBF,EAAMG,cADRC,SAAYC,EAAKH,EAALZ,MAAOgB,EAAIJ,EAAJI,KAAMC,EAAML,EAANK,OAGvBC,GAAcH,EAAMI,MACpBC,GAAaJ,EAAKG,MAClBE,GAAeJ,EAAOE,MAC1B,GAAID,EAAa,GAAKE,EAAY,GAAKC,GAAe,EAEpD,YADAC,EAAA1B,GAAS2B,OAAOC,QAAQ,oCAG1B,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAaI,IAChC3B,EAAc2B,EAAGP,GACdQ,MAAK,SAAAC,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MACjB4B,YAAW,WACTN,EAAA1B,GAAS2B,OAAOM,QACd,uBAAwCC,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,MAC5C,CAAA+B,SAAS,G,GAEZ/B,E,IAEJgC,OAAM,SAAAL,G,IAAG5B,EAAQ4B,EAAR5B,SAAUC,EAAK2B,EAAL3B,MAClB4B,YAAW,WACTN,EAAA1B,GAAS2B,OAAOC,QACd,sBAAqCM,OAAf/B,EAAS,QAAY+B,OAAN9B,EAAM,MAC3C,CAAE+B,SAAS,G,GAEZ/B,E,IAEPkB,GAAcE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n  const {\n    elements: { delay, step, amount },\n  } = event.currentTarget;\n\n  let delayValue = +delay.value;\n  let stepValue = +step.value;\n  let amountValue = +amount.value;\n  if (delayValue < 0 || stepValue < 0 || amountValue <= 0) {\n    Notiflix.Notify.failure('Please enter value bigger than 0');\n    return;\n  }\n  for (let i = 1; i <= amountValue; i++) {\n    createPromise(i, delayValue)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`,\n            { useIcon: false }\n          );\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`,\n            { useIcon: false }\n          );\n        }, delay);\n      });\n    delayValue += stepValue;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    return Promise.resolve({ position: position, delay: delay });\n  } else {\n    return Promise.reject({ position: position, delay: delay });\n  }\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Math","random","Promise","resolve","reject","form","document","querySelector","addEventListener","event","preventDefault","_elements","currentTarget","elements","delay1","step","amount","delayValue","value","stepValue","amountValue","$parcel$interopDefault","Notify","failure","i","then","param","setTimeout","success","concat","useIcon","catch"],"version":3,"file":"03-promises.7e8788f1.js.map"}